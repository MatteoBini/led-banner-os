#include <LedControl.h>
#include <SoftwareSerial.h>

// hardware settings
const int RX = 2;
const int TX = 3;
const int DIN = 12;
const int CS =  11;
const int CLK = 10;

// displayable chars
const byte c_a[8] = {0x3c, 0x7e, 0xc3, 0xc3, 0xff, 0xff, 0x81, 0x81};
const byte c_b[8] = {0x1e, 0x23, 0x43, 0x7F, 0x7F, 0x83, 0x83, 0xfe};
const byte c_c[8] = {0x3C, 0x66, 0xC3, 0xC0, 0xC0, 0xC3, 0x66, 0x3C};
const byte c_d[8] = {0x1e, 0x1f, 0x33, 0x63, 0xC3, 0xC3, 0x7F, 0x3e};
const byte c_e[8] = {0xFF, 0xFF, 0xC0, 0xFE, 0xFE, 0xC0, 0xFF, 0xFF};
const byte c_f[8] = {0xFF, 0xFF, 0xC0, 0xFE, 0xFE, 0xC0, 0xC0, 0xC0};
const byte c_g[8] = {0x3C, 0x66, 0xC3, 0xC0, 0xCF, 0xC3, 0x66, 0x3C};
const byte c_h[8] = {0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3};
const byte c_i[8] = {0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c};
const byte c_j[8] = {0xfc, 0xfc, 0x30, 0x30, 0x33, 0x33, 0x1e, 0x0C};
const byte c_k[8] = {0x63, 0x33, 0x1b, 0x0f, 0x0f, 0x1b, 0x33, 0x63};
const byte c_l[8] = {0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x1f, 0x1f};
const byte c_m[8] = {0xC3, 0xE7, 0xFF, 0xDB, 0xC3, 0xC3, 0xC3, 0xC3};
const byte c_n[8] = {0xC3, 0xE3, 0xF3, 0xDB, 0xCF, 0xC7, 0xC3, 0xC3};
const byte c_o[8] = {0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0xC3, 0x66, 0x3C};
const byte c_p[8] = {0xFF, 0xFF, 0xC3, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0};
const byte c_q[8] = {0x3C, 0x66, 0xC3, 0xC3, 0xDB, 0xCF, 0x7E, 0x3E};
const byte c_r[8] = {0xFF, 0xFF, 0xC3, 0xFF, 0xFF, 0xCC, 0xC6, 0xC3};
const byte c_s[8] = {0x3C, 0x66, 0xC0, 0x7C, 0x3E, 0x06, 0xC6, 0x7C};
const byte c_t[8] = {0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18};
const byte c_u[8] = {0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7E, 0x3C};
const byte c_v[8] = {0xC3, 0xC3, 0xC3, 0x66, 0x66, 0x3C, 0x18, 0x18};
const byte c_w[8] = {0xC3, 0xC3, 0xC3, 0xDB, 0xFF, 0xFF, 0x66, 0x66};
const byte c_x[8] = {0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0xC3};
const byte c_y[8] = {0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x18};
const byte c_z[8] = {0xFF, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0xFF, 0xFF};

// displayable digits
const byte d_0[8] = {0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C};
const byte d_1[8] = {0x0C, 0x1C, 0x3C, 0x0C, 0x0C, 0x0C, 0xFF, 0xFF};
const byte d_2[8] = {0x73, 0x62, 0x76, 0x18, 0x0c, 0x46, 0x7e, 0x00};
const byte d_3[8] = {0x1f, 0x11, 0x10, 0x1e, 0x10, 0x10, 0x11, 0x1f};
const byte d_4[8] = {0x10, 0x18, 0x14, 0x12, 0x7F, 0x10, 0x10, 0x10};
const byte d_5[8] = {0xFF, 0xFF, 0xC0, 0xFC, 0xFE, 0x07, 0xFF, 0xFE};
const byte d_6[8] = {0x00, 0x3c, 0x04, 0x04, 0x3c, 0x24, 0x24, 0x3C};
const byte d_7[8] = {0xFF, 0xFF, 0xC7, 0xC7, 0xE3, 0xF3, 0xF9, 0xF8};
const byte d_8[8] = {0x7E, 0xFF, 0xC3, 0x7E, 0x3C, 0xE7, 0xFF, 0x7E};
const byte d_9[8] = {0x1e, 0x10, 0x10, 0x10, 0x78, 0x10, 0x10, 0x10};

// others
const byte arrowleft[8]={0x00,0x00,0x20,0x20,0x20,0x00,0x00,0x00,};
const byte arrowright[8]={0x00,0x00,0x00,0x20,0x20,0x20,0x00,0x00,};
const byte arrowdown[8]={0x00,0x00,0x00,0x00,0x20,0x30,0x00,0x00,};
const byte arrowup[8]={0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,};
const byte somthink[8]={0x00,0x00,0x00,0x00,0x00,0x1C,0x00,0x00,};
const byte somthink2[8]={0x00,0x00,0x00,0x00,0x04,0x0C,0x00,0x00,};
const byte arrowleft2[8]={0x00,0x00,0x00,0x04,0x04,0x04,0x00,0x00,};
const byte arrowright2[8]={0x00,0x00,0x04,0x04,0x04,0x00,0x00,0x00,};
const byte arrowdown2[8]={0x00,0x00,0x0C,0x04,0x00,0x00,0x00,0x00,};
const byte arrowup2[8]={0x00,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,};
const byte somthink3[8]={0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,};
const byte somthink23[8]={0x00,0x00,0x30,0x20,0x00,0x00,0x00,0x00,};

// editables settigns
int delay_ms = 1500;          // 1 second
int brightness = 15;        // max

// Hardware initialisation
SoftwareSerial bluetoothSerial(RX, TX);
LedControl lc = LedControl(DIN, CLK, CS, 0);

// control functions
void printByte(const byte character [])
{
  for (int i = 0; i < 8; i++)
  {
    lc.setRow(0, i, character[i]);
  }
}

void clearDisplay()
{
  lc.clearDisplay(0);
}

void setDelay(int d)
{
  delay_ms = d;
}

void setBrightness(int b)
{
  brightness = b;
}

void printStringOnLED(String string) 
{
  int i = 0;
  string.toLowerCase();
  do 
  {
    switch (string.charAt(i))
    {
      case 'a':
        printByte(c_a);
        break;
      case 'b':
        printByte(c_b);
        break;
      case 'c':
        printByte(c_c);
        break;
      case 'd':
        printByte(c_d);
        break;
      case 'e':
        printByte(c_e);
        break;
      case 'f':
        printByte(c_f);
        break;
      case 'g':
        printByte(c_g);
        break;
      case 'h':
        printByte(c_h);
        break;
      case 'i':
        printByte(c_i);
        break;
      case 'j':
        printByte(c_j);
        break;
      case 'k':
        printByte(c_j);
        break;
      case 'l':
        printByte(c_j);
        break;
      case 'm':
        printByte(c_m);
        break;
      case 'n':
        printByte(c_n);
        break;
      case 'o':
        printByte(c_o);
        break;
      case 'p':
        printByte(c_p);
        break;
      case 'q':
        printByte(c_q);
        break;
      case 'r':
        printByte(c_r);
        break;
      case 's':
        printByte(c_s);
        break;
      case 't':
        printByte(c_t);
        break;
      case 'u':
        printByte(c_u);
        break;
      case 'v':
        printByte(c_v);
        break;
      case 'w':
        printByte(c_w);
        break;
      case 'x':
        printByte(c_x);
        break;
      case 'y':
        printByte(c_y);
        break;
      case 'z':
        printByte(c_z);
        break;
      case '0':
        printByte(d_0);
        break;
      case '1':
        printByte(d_1);
        break;
      case '2':
        printByte(d_2);
        break;
      case '3':
        printByte(d_3);
        break;
      case '4':
        printByte(d_4);
        break;
      case '5':
        printByte(d_5);
        break;
      case '6':
        printByte(d_6);
        break;
      case '7':
        printByte(d_7);
        break;
      case '8':
        printByte(d_8);
        break;
      case '9':
        printByte(d_9);
    }
    delay(delay_ms);
    clearDisplay();
  } while(string.charAt(i++) != '\n');
}

void setup()
{
  Serial.begin(9600);
  bluetoothSerial.begin(9600);

  bluetoothSerial.write("AT+NAMEMyDevice\r\n");
  delay(100);
  bluetoothSerial.write("AT+PIN1234\r\n");
  delay(100);
  bluetoothSerial.write("AT+BAUD4\r\n");

  lc.shutdown(0, false);          // The MAX72XX is in power-saving mode on startup
  lc.setIntensity(0, brightness); // Set the brightness to maximum value
  clearDisplay();                 // and clear the display
}

void loop() 
{
  if (bluetoothSerial.available()) 
  {
    String message = bluetoothSerial.readString();
    Serial.print(message);
    printStringOnLED(message);
  }
}
